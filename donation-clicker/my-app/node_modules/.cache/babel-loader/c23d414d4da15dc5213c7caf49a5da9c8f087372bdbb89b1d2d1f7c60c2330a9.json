{"ast":null,"code":"var _jsxFileName = \"/Users/genkimatsunaga/UniversityRelated/3rdSpring/WebEngineering/DonationClicker/donation-clicker/my-app/src/components/Leaderboard.jsx\";\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\nimport \"./Leaderboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\";\nconst highlightedCountries = [\"CIV\", \"GHA\", \"NGA\", \"CMR\"];\nconst SDG_GOAL_CHILD_LABOR = 1000000;\n\n// This component is now much simpler and just displays the data it receives.\nfunction Leaderboard({\n  leaderboard,\n  totals\n}) {\n  const progress = totals.totalDonations / SDG_GOAL_CHILD_LABOR * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Top 10 Donators\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: leaderboard.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.username, \": $\", user.donated.toFixed(2)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"global-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Global Impact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Donations: $\", totals.totalDonations.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Children Saved: \", totals.totalChildrenSaved]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Progress Towards SDG Goal (End Child Labour):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ComposableMap, {\n        projection: \"geoMercator\",\n        children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n          center: [0, 0],\n          zoom: 1,\n          children: /*#__PURE__*/_jsxDEV(Geographies, {\n            geography: geoUrl,\n            children: ({\n              geographies\n            }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              fill: highlightedCountries.includes(geo.properties.ISO_A3) ? \"#E42\" : \"#D6D6DA\",\n              stroke: \"#FFF\"\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","ComposableMap","Geographies","Geography","ZoomableGroup","jsxDEV","_jsxDEV","geoUrl","highlightedCountries","SDG_GOAL_CHILD_LABOR","Leaderboard","leaderboard","totals","progress","totalDonations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","index","username","donated","toFixed","totalChildrenSaved","style","width","projection","center","zoom","geography","geographies","geo","fill","includes","properties","ISO_A3","stroke","rsmKey","_c","$RefreshReg$"],"sources":["/Users/genkimatsunaga/UniversityRelated/3rdSpring/WebEngineering/DonationClicker/donation-clicker/my-app/src/components/Leaderboard.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n} from \"react-simple-maps\";\nimport \"./Leaderboard.css\";\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\";\nconst highlightedCountries = [\"CIV\", \"GHA\", \"NGA\", \"CMR\"];\nconst SDG_GOAL_CHILD_LABOR = 1000000;\n\n// This component is now much simpler and just displays the data it receives.\nfunction Leaderboard({ leaderboard, totals }) {\n  const progress = (totals.totalDonations / SDG_GOAL_CHILD_LABOR) * 100;\n\n  return (\n    <div className=\"leaderboard-container\">\n      <div className=\"leaderboard-list\">\n        <h3>Top 10 Donators</h3>\n        <ol>\n          {leaderboard.map((user, index) => (\n            <li key={index}>\n              {user.username}: ${user.donated.toFixed(2)}\n            </li>\n          ))}\n        </ol>\n      </div>\n\n      <div className=\"global-stats\">\n        <h3>Global Impact</h3>\n        <p>Total Donations: ${totals.totalDonations.toFixed(2)}</p>\n        <p>Total Children Saved: {totals.totalChildrenSaved}</p>\n\n        <h4>Progress Towards SDG Goal (End Child Labour):</h4>\n        <div className=\"progress-bar-container\">\n          <div className=\"progress-bar\" style={{ width: `${progress}%` }}></div>\n        </div>\n\n        <ComposableMap projection=\"geoMercator\">\n          <ZoomableGroup center={[0, 0]} zoom={1}>\n            <Geographies geography={geoUrl}>\n              {({ geographies }) =>\n                geographies.map((geo) => (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    fill={\n                      highlightedCountries.includes(geo.properties.ISO_A3)\n                        ? \"#E42\"\n                        : \"#D6D6DA\"\n                    }\n                    stroke=\"#FFF\"\n                  />\n                ))\n              }\n            </Geographies>\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    </div>\n  );\n}\n\nexport default Leaderboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}